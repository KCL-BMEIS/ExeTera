#!/usr/bin/env python

# Copyright 2020 KCL-BMEIS - King's College London
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#     http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from datetime import datetime, timezone
import os

# from hystore.covidspecific import data_schemas, importer
from version import __version__
from hystore.core import importer

import argparse

parser = argparse.ArgumentParser()
parser.add_argument('--version', action='version', version=__version__)
parser.add_argument('-te', '--territories', default=None,
                    help='the territory/territories to filter the dataset on (runs on all territories if not set)')
parser.add_argument('-s', '--schema', required=True,
                    help='the location and name of the schema file')
parser.add_argument('-p', '--patient_data',
                    help='the location and name of the patient data csv file')
parser.add_argument('-a', '--assessment_data',
                    help='the location and name of the assessment data csv file')
parser.add_argument('-t', '--test_data',
                    help='the location and name of the assessment data csv file')
parser.add_argument('-c', '--consent_data', default=None,
                    help='the location and name of the consent data csv file')
parser.add_argument('-o', '--output_hdf5',
                    help='the location and name of the output hdf5 file')
parser.add_argument('-d', '--data_schema', default=1, type=int,
                    help='the schema number to use for parsing and cleaning data')
parser.add_argument('-ts', '--timestamp', default=str(datetime.now(timezone.utc)),
                    help='override for the import datetime (the current time is selected otherwise')
args = parser.parse_args()

errors = False
if not os.path.isfile(args.schema):
    print('-s/--schema argument must be an existing file')
    errors = True
if not os.path.isfile(args.patient_data):
    print('-p/--patient_data argument must be an existing file')
    errors = True
if not os.path.isfile(args.assessment_data):
    print('-a/--assessment_data argument must be an existing file')
    errors = True
if not os.path.isfile(args.test_data):
    print('-t/--test_data argument must be an existing file')
    errors = True

if errors:
    exit(-1)

if 'dev' in __version__:
    msg = ("Warning: this is a development version of hystore ({}). "
           "Please use one of the release versions for actual work")
    print(msg.format(__version__))

# data_schema_version = 1
# data_schema = data_schemas.DataSchema(data_schema_version)
# data_schema = data_schemas.DataSchema(1)
files = {'patients': args.patient_data,
         'assessments': args.assessment_data,
         'tests': args.test_data}
importer.import_with_schema(args.timestamp, args.output_hdf5, args.schema, files)
# importer.import_to_hdf5(args.timestamp, args.output_hdf5, data_schema,
#                         args.patient_data, args.assessment_data, args.test_data,
#                         args.territories)


