# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build & upload package

on:
  release:
    types: [published]

jobs:
  deploy:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 wheel
        pip install -r requirements.txt
    - if: runner.os == 'ubuntu-latest'
      name: Set up GCC
      uses: egor-tensin/setup-gcc@v1
      with:
        version: latest
        platform: x64
    - if: runner.os == 'windows-latest'
      name: Set up MinGW
      uses: egor-tensin/setup-mingw@v2
      with:
       platform: x64
    - name: Build package
      run: python setup.py bdist_wheel
    - if: runner.os == 'ubuntu-latest'
      name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
    - if: runner.os == 'windows-latest'
      name: Publish package
      run: |
        python3 -m twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
    - if: runner.os == 'macos-latest'
      name: Publish package
      run: |
        python3 -m twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
